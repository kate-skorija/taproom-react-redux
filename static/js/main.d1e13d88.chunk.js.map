{"version":3,"sources":["images/beer.jpg","images/fishbowl.jpg","components/Header.js","components/ReusableForm.js","components/NewKegForm.js","components/Keg.js","components/KegList.js","components/KegDetail.js","components/EditKegForm.js","actions/index.js","actions/ActionTypes.js","components/KegControl.js","components/App.js","serviceWorker.js","reducers/index.js","reducers/form-visible-reducer.js","reducers/selected-keg-reducer.js","reducers/keg-list-reducer.js","reducers/editing-reducer.js","index.js"],"names":["module","exports","Header","headerStyles","backgroundImage","Background","padding","backgroundColor","Fragment","style","fontFamily","fontSize","marginBottom","color","borderRadius","width","height","float","marginRight","src","Fishbowl","ReusableForm","props","margin","className","onSubmit","formSubmissionHandler","type","name","placeholder","marginLeft","buttonText","NewKegForm","event","preventDefault","onNewKegCreation","target","value","brand","price","alcoholContent","pintsRemaining","id","v4","Keg","display","flexDirection","boxShadow","onClick","whenPintSold","whenKegClicked","KegList","gridTemplateColumns","gridTemplateRows","overflow","Object","values","kegList","map","keg","onKegSelection","onPintSoldClick","parseInt","key","KegDetail","onClickingDelete","onClickingEdit","EditKegForm","onEditKeg","addKeg","KegControl","handleClick","dispatch","selectedKeg","editing","handleAddingNewKegToList","newKeg","a","handleChangingSelectedKeg","selectedKegInKegList","masterKegList","handlePintSold","kegId","kegToUpdate","handleDeletingKeg","action2","handleEditClick","handleEditingKeg","kegToEdit","action3","state","currentlyVisibleState","this","formVisibleOnPage","marginTop","textAlign","position","paddingBottom","bottom","border","outline","React","Component","connect","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","assign","newState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1e13d88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beer.2570c231.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fishbowl.8713e736.jpg\";","import React from \"react\";\nimport Background from './../images/beer.jpg'\nimport Fishbowl from './../images/fishbowl.jpg'\n\n\nfunction Header(){\n\n  const h1Styles = {\n    fontFamily: 'Oleo Script Swash Caps', \n    fontSize: '100px',\n    padding: '30px 0 0 30px',\n    marginBottom: '0',\n    color: '#292b2c'\n  }\n\n  const h2Styles = {\n    fontFamily: 'Lato', \n    fontSize: '30px',\n    padding: '0 0 0 30px',\n    color: '#292b2c'\n  }\n  \n  const headerStyles = {\n    backgroundImage: `url(${Background})`,\n    padding: '10px 15px 40px 15px',\n    backgroundColor: 'darkolivegreen'\n  }\n\n  const imageStyle = {\n    borderRadius: '50%',\n    width: '150px',\n    height: '150px',\n    float: 'right',\n    marginRight: '50px'\n\n  }\n  \n  return (\n    <React.Fragment>\n      <div style={headerStyles}>\n        <h1 style={h1Styles}>The Fishbowl <img style={imageStyle} src={Fishbowl}></img></h1>\n        <h2 style={h2Styles}>Beers On Tap</h2>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction ReusableForm(props){\n\n  const formStyles = {\n    padding: '30px 0',\n    width: '50%',\n    margin: '0 auto'\n  }\n  \n  return (\n    <React.Fragment>\n      <div style={{width: '100%'}}> \n        <form style={formStyles} className=\"form-group row justify-content-center\" onSubmit={props.formSubmissionHandler}>\n          <input style={{margin: '20px'}} className='form-control input-sm'\n          type='text'\n          name='name'\n          placeholder='Name of Beer'\n          />\n          <input style={{margin: '20px'}} className='form-control input-sm'\n          type='text'\n          name='brand'\n          placeholder='Brand'\n          />\n          <input style={{margin: '20px'}} className='form-control input-sm'\n          type = 'text'\n          name= 'price'\n          placeholder = 'Price per Pint'\n          />\n          <input style={{margin: '20px'}} className='form-control input-sm'\n          type = 'text'\n          name='alcoholContent'\n          placeholder = 'ABV%'\n          />\n          <input style={{margin: '20px'}} className='form-control input-sm'\n          type = 'number'\n          name='pintsRemaining'\n          placeholder = 'Number of Pints'\n          />\n          <button className=\"btn btn-secondary btn-lg\" style={{marginLeft: '20px'}} type='submit'>{props.buttonText}</button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n\nReusableForm.propTypes = {\n  formSubmissionHandler: PropTypes.func,\n  buttonText: PropTypes.string\n};\n\nexport default ReusableForm;","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\"\nimport { v4 } from 'uuid';\nimport PropTypes from \"prop-types\";\n\nfunction NewKegForm(props){\n\n  function handleNewKegFormSubmission(event) {\n    event.preventDefault();\n    props.onNewKegCreation({name: event.target.name.value, brand: event.target.brand.value, price: event.target.price.value, alcoholContent: event.target.alcoholContent.value, pintsRemaining: event.target.pintsRemaining.value, id: v4()});\n  }\n\n  return (\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler={handleNewKegFormSubmission}\n        buttonText=\"Add!\" />\n    </React.Fragment>\n  );\n}\n\nNewKegForm.propTypes = {\n  onNewKegCreation: PropTypes.func\n};\n\nexport default NewKegForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Keg(props){\n\n  const kegStyles = {\n    display: 'flex',\n    margin: '1em',\n    flexDirection: 'column',\n    boxShadow: '1px 1px 5px rgba(0, 0, 0, 0.2)',\n    borderRadius: '.6em',\n    padding: '1em',\n    backgroundColor: 'rgba(255, 140, 0, 0.7)',\n  }\n\n  return (\n    <React.Fragment>\n      <div style={kegStyles}>\n        <h3 style={{fontSize:'35px'}}>{props.name}</h3>\n        <h4>{props.brand}</h4>\n        <p>{props.price}</p>\n        <p>{props.alcoholContent}</p>\n        <p style={{fontSize: '20px'}}>{props.pintsRemaining}</p>\n        <button style={{marginBottom: '5px'}} className=\"btn btn-dark\" onClick = { () => props.whenPintSold(props.id)}>Pint Sold!</button>\n        <button className=\"btn btn-dark\" onClick = { () => props.whenKegClicked(props.id)}>Details</button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nKeg.propTypes = {\n  name: PropTypes.string,\n  brand: PropTypes.string,\n  price: PropTypes.string,\n  alcoholContent: PropTypes.string,\n  pintsRemaining: PropTypes.number,\n  whenKegClicked: PropTypes.func,\n  whenPintSold: PropTypes.func\n};\n\nexport default Keg;","import React from \"react\";\nimport Keg from \"./Keg\";\nimport PropTypes from \"prop-types\";\n\nfunction KegList(props) { \n\n  const kegListStyles = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr 1fr 1fr',\n    gridTemplateRows: '43vh 43vh 43vh 43vh 43vh 43vh',\n    width: '100vw',\n    height: '65vh',\n    overflow: 'scroll',\n  }\n\n  return (\n    <React.Fragment>\n      <div style={kegListStyles}>\n      {Object.values(props.kegList).map((keg) => {\n        return <Keg \n          whenKegClicked = { props.onKegSelection }\n          whenPintSold = { props.onPintSoldClick }\n          name={keg.name}\n          brand={keg.brand}\n          pintsRemaining={parseInt(keg.pintsRemaining)}\n          id={keg.id}\n          key={keg.id}\n          />\n      })} \n      </div>\n    </React.Fragment>\n  );\n}\n\nKegList.propTypes = {\n  kegList: PropTypes.object,\n  onKegSelection: PropTypes.func,\n  onPintSoldClick: PropTypes.func,\n};\n\nexport default KegList;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction KegDetail(props){\n  const { keg, onClickingDelete, onClickingEdit } = props;\n\n  return (\n    <React.Fragment>\n      <div style={{padding: '100px'}}>\n        <h2>{Object.values(keg)[0].name} - {Object.values(keg)[0].brand}</h2>\n        <p style={{fontSize: '20px'}}>Price: {Object.values(keg)[0].price} per pint</p>\n        <p style={{fontSize: '20px'}}>Alcohol Content: {Object.values(keg)[0].alcoholContent}</p>\n        <p style={{fontSize: '20px'}}>Pints Remaining: {Object.values(keg)[0].pintsRemaining}</p>\n        <div className=\"btn-group\">\n          <button className=\"btn btn-secondary\" onClick = {onClickingEdit}>Update Keg</button>\n          <button className=\"btn btn-secondary\" onClick = { () => onClickingDelete(Object.values(keg)[0].id)}>Remove from Tap List</button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nKegDetail.propTypes = {\n  keg: PropTypes.object,\n  // onPintSold: PropTypes.func,\n  onClickingDelete: PropTypes.func,\n  onClickingEdit: PropTypes.func\n};\n\nexport default KegDetail;\n","import React from \"react\";\nimport ReusableForm from \"./ReusableForm\";\nimport PropTypes from \"prop-types\";\n\nfunction EditKegForm(props) {\n  const { keg } = props;\n\n  function handleEditKegFormSubmission(event) {\n    event.preventDefault();\n    props.onEditKeg({name: event.target.name.value, brand: event.target.brand.value, alcoholContent: event.target.alcoholContent.value, pintsRemaining: event.target.pintsRemaining.value, id: Object.values(keg)[0].id}); \n  }\n  return (\n    <React.Fragment>\n      <ReusableForm\n        formSubmissionHandler = {handleEditKegFormSubmission}\n        buttonText=\"Update Keg\" />\n    </React.Fragment>\n  );\n}\n\nEditKegForm.propTypes = {\n  onEditKeg: PropTypes.func\n};\n\nexport default EditKegForm;","import * as c from './../actions/ActionTypes';\n\nexport const deleteKeg = id => ({\n  type: c.DELETE_KEG,\n  id\n});\n\nexport const toggleForm = () => ({\n  type: c.TOGGLE_FORM\n});\n\nexport const toggleEditForm = () => ({\n  type: c.TOGGLE_EDIT_FORM\n});\n\nexport const selectKeg = (keg) => {\n  const { name, brand, price, alcoholContent, pintsRemaining, id } = keg;\n\treturn {\n\t\ttype: c.SELECT_KEG,\n\t\tname: name,\n    brand: brand,\n    price: price,\n    alcoholContent: alcoholContent,\n    pintsRemaining: pintsRemaining,\n    id: id\n\t};\n};\n\nexport const deselectKeg = () => {\n  return {\n    type: c.DESELECT_KEG\n  }\n}\n\nexport const addKeg = (keg) => {\n  const { name, brand, price, alcoholContent, pintsRemaining, id } = keg;\n\treturn {\n\t\ttype: c.ADD_KEG,\n\t\tname: name,\n    brand: brand,\n    price: price,\n    alcoholContent: alcoholContent,\n    pintsRemaining: pintsRemaining,\n    id: id\n\t};\n};","export const ADD_KEG = 'ADD_KEG';\nexport const DELETE_KEG = 'DELETE_KEG';\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\nexport const TOGGLE_EDIT_FORM = 'TOGGLE_EDIT_FORM';\nexport const SELECT_KEG = 'SELECT_KEG';\nexport const DESELECT_KEG = 'DESELECT_KEG';","import React from 'react';\nimport NewKegForm from './NewKegForm';\nimport KegList from './KegList';\nimport KegDetail from './KegDetail';\nimport EditKegForm from './EditKegForm';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport * as a from './../actions';\n\nclass KegControl extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n\n  handleClick = () => {\n    const { dispatch } = this.props;\n    if (this.props.selectedKeg != null && this.props.editing != false) {\n      const action = a.deselectKeg();\n      dispatch(action);\n      const action2 = a.toggleEditForm();\n      dispatch (action2);\n    } else if (this.props.selectedKeg != null) {\n      const action3 = a.deselectKeg();\n      dispatch(action3);\n    } else {\n      const action3 = a.toggleForm();\n      dispatch(action3);\n    };\n  };\n\n  handleAddingNewKegToList = (newKeg) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(newKeg);\n    dispatch(action);\n    const action2 = a.toggleForm();\n    dispatch(action2);\n  };\n\n  handleChangingSelectedKeg = (id) => {\n    const { dispatch } = this.props;\n    const selectedKegInKegList = this.props.masterKegList[id];\n    const action = a.selectKeg(selectedKegInKegList);\n    dispatch(action);\n  };\n\n  handlePintSold = (kegId) => {\n    const { dispatch } = this.props;\n    const kegToUpdate = this.props.masterKegList[kegId];\n    if (kegToUpdate.pintsRemaining > 0) {\n      kegToUpdate.pintsRemaining--;\n    }\n    const action = a.addKeg(kegToUpdate);\n    dispatch(action);\n  };\n\n  handleDeletingKeg = (id) => {\n    const { dispatch } = this.props;\n    const action = a.deleteKeg(id);\n    const action2 = a.deselectKeg();\n    dispatch(action);\n    dispatch(action2);\n  };\n\n  handleEditClick = () => {\n    const { dispatch } = this.props;\n    const action = a.toggleEditForm();\n    dispatch(action);\n  };\n\n  handleEditingKeg = (kegToEdit) => {\n    const { dispatch } = this.props;\n    const action = a.addKeg(kegToEdit);\n    const action2 = a.toggleEditForm();\n    const action3 = a.deselectKeg();\n    dispatch(action);\n    dispatch(action2);\n    dispatch(action3);\n  };\n\n  render(){\n    let currentlyVisibleState = null;\n    let buttonText = null;\n    if (this.props.editing) {\n      currentlyVisibleState = <EditKegForm \n                                keg = {this.props.selectedKeg} \n                                onEditKeg = {this.handleEditingKeg} />\n      buttonText = \"Return to Keg List\"\n    } else if (this.props.selectedKeg != null) {\n      currentlyVisibleState = <KegDetail \n                                keg = {this.props.selectedKeg} \n                                onClickingDelete = {this.handleDeletingKeg} \n                                onClickingEdit = {this.handleEditClick} />\n      buttonText = \"Return to Keg List\"\n    } else if (this.props.formVisibleOnPage) {\n      currentlyVisibleState = <NewKegForm \n                                onNewKegCreation = {this.handleAddingNewKegToList} />\n      buttonText = \"Return to Keg List\"\n    } else {\n      currentlyVisibleState = <KegList \n                                kegList = {this.props.masterKegList} \n                                onKegSelection = {this.handleChangingSelectedKeg} \n                                onPintSoldClick = {this.handlePintSold} />\n      buttonText = \"Add Keg\"\n    }\n\n    const bodyStyles = {\n      width: '100vw',\n      height: '82vh',\n      backgroundColor: 'darkolivegreen',\n      fontFamily: 'Lato',\n      marginTop: '-20px',\n      textAlign: 'center',\n      position: 'relative',\n      paddingBottom: '6em'\n    }\n\n    const buttonStyles = {\n      width: '100vw',\n      height: '20vh',\n      backgroundColor: '#292b2c',\n      border: 'none',\n      color: 'antiquewhite',\n      fontSize: '40px',\n      fontFamily: 'Oleo Script Swash Caps',\n      outline: 'none'\n    }\n\n    const footerStyles = {\n      position: 'absolute',\n      bottom: '0',\n      width: '100vw',\n      height: '20vh'\n    }\n\n    return (\n      <React.Fragment>\n        <div style={bodyStyles}>\n          {currentlyVisibleState}\n          <div style={footerStyles}>\n            <button style={buttonStyles} onClick={this.handleClick}>{buttonText}</button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nKegControl.propTypes = {\n  masterKegList: PropTypes.object,\n  formVisibleOnPage: PropTypes.bool,\n  selectedPost: PropTypes.object,\n  editing: PropTypes.bool,\n}\n\nconst mapStateToProps = state => {\n  return {\n    masterKegList: state.masterKegList,\n    formVisibleOnPage: state.formVisibleOnPage,\n    selectedKeg: state.selectedKeg,\n    editing: state.editing\n  }\n}\n\nKegControl = connect(mapStateToProps)(KegControl);\n\nexport default KegControl;","import React from 'react';\nimport Header from './Header.js'\nimport KegControl from './KegControl'\n\nfunction App(){\n  \n  return (\n    <React.Fragment>\n      <Header />\n      <KegControl />\n    </React.Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import formVisibleReducer from './form-visible-reducer';\nimport kegListReducer from './keg-list-reducer';\nimport selectedKegReducer from './selected-keg-reducer';\nimport editingReducer from './editing-reducer'\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n  formVisibleOnPage: formVisibleReducer,\n  selectedKeg: selectedKegReducer,\n  masterKegList: kegListReducer,\n  editing: editingReducer\n});\n\nexport default rootReducer","import * as c from './../actions/ActionTypes';\n\nexport default (state = false, action) => {\n  switch (action.type) {\n  case c.TOGGLE_FORM:\n    return !state;\n  default:\n    return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = null, action) => {\n  const { name, brand, price, alcoholContent, pintsRemaining, id } = action;\n  switch(action.type){\n  case c.SELECT_KEG:\n    return {\n      [id]: { name: name,\n        brand: brand,\n        price: price,\n        alcoholContent: alcoholContent,\n        pintsRemaining: pintsRemaining,\n        id: id }\n    }\n    case c.DESELECT_KEG:\n      return null;\n    default:\n      return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\nexport default (state = {}, action) => {\n  const { name, brand, price, alcoholContent, pintsRemaining, id } = action;\n  switch(action.type) {\n  case c.ADD_KEG:\n    return Object.assign({}, state, {\n      [id] : {\n        name: name,\n        brand: brand,\n        price: price,\n        alcoholContent: alcoholContent,\n        pintsRemaining: pintsRemaining,\n        id: id\n      }\n    });\n  case c.DELETE_KEG:\n    const newState = { ...state };\n    delete newState[id];\n    return newState;\n  default:\n    return state;\n  }\n};","import * as c from './../actions/ActionTypes';\n\n\nexport default (state = false, action) => {\n  switch (action.type) {\n    case c.TOGGLE_EDIT_FORM:\n      return !state;\n    default:\n      return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nstore.subscribe(() => \n  console.log(store.getState())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}